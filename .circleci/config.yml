global-working-directory: &working-directory "/tmp/working-directory"

version: 2.1

orbs:
  aws-cli: circleci/aws-cli@0.1.19
  aws-s3: circleci/aws-s3@1.0.11

jobs:
  npm-ci:
    docker:
      # The primary container is an instance of the first image listed. The job's commands run in this container.
      - image: circleci/node:12.13.1-stretch
      # The secondary container is an instance of the second listed image which is run in a common network where ports exposed on the primary container are available on localhost.
      # - image: mysql:5.7.16
    working_directory: *working-directory
    steps:
      - checkout
      - restore_cache:
          keys:
            - npm-ci-v1-{{ .Branch }}-{{ checksum "package.json" }}
      - run:
          name: Install NPM dependencies
          command: npm ci
      - save_cache:
          key: npm-ci-v1-{{ .Branch }}-{{ checksum "package.json" }}
          paths:
            - node_modules

  webpack-build:
    description: A job that runs the webpack.config.js directives (Ex. compile assets, optimize CSS, etc.)
    docker:
      - image: circleci/node:12.13.1-stretch
    working_directory: *working-directory
    steps:
      - checkout
      - restore_cache:
          keys:
            - npm-ci-v1-{{ .Branch }}-{{ checksum "package.json" }}
      - run:
          name: Create .env file and set values
          command: |
            cat > .env \<< EOL
            API_HEALTHCHECK_ROUTE="/health-check"
            API_PORT=443
            API_ROUTE_PREFIX="/api"
            API_SUBDOMAIN="api"
            APP_NAME="MotoMenus"
            EOL
      - when:
          condition: $CIRCLE_BRANCH == "dev"
          steps:
            - run: npm run dev:webpack:build
      - unless:
          condition: $CIRCLE_BRANCH == "dev"
          steps:
            - run: npm run prod:webpack:build
      - run: rm -rf node_modules
      - persist_to_workspace:
          # Must be an absolute path, or relative path from working_directory.
          root: ./dist
          # Must be relative path from root.
          paths:
            - ./

  sync-assets-to-s3:
    executor:
      name: aws-cli/default
      python-version: "3.8.1"
      debian-release: buster
    working_directory: *working-directory
    steps:
      - checkout
      - attach_workspace:
          # Must be absolute path or relative path from working_directory.
          at: ./dist
      - run:
          name: "Set an environment variable ($CIRCLE_PROJECT_REPONAME_LOWERCASE)"
          command: |
            set -x
            echo 'export CIRCLE_PROJECT_REPONAME_LOWERCASE=$(echo "$CIRCLE_PROJECT_REPONAME" | tr '[:upper:]' '[:lower:]')' >> $BASH_ENV
      - aws-s3/sync:
          arguments: |
            --acl public-read \
            --metadata "commit=${CIRCLE_SHA1}"
          aws-region: AWS_DEFAULT_REGION
          from: dist
          overwrite: true
          to: "s3://${CIRCLE_PROJECT_REPONAME_LOWERCASE}-${CIRCLE_BRANCH}"

  create-invalidation:
    executor:
      name: aws-cli/default
      python-version: "3.8.1"
      debian-release: buster
    steps:
      - aws-cli/setup
      - run:
          name: "Create invalidation in CloudFront"
          command: |
            set -x
            aws cloudfront create-invalidation --distribution-id="${AWS_CLOUDFRONT_DISTRIBUTION_ID}" --paths="/*"

workflows:
  version: 2
  main-workflow:
    jobs:
      - npm-ci

      - webpack-build:
          requires:
            - npm-ci

      - sync-assets-to-s3:
          context: "org-global"
          filters:
            branches:
              only:
                - dev
                - prod
          requires:
            - webpack-build

      - create-invalidation:
          context: "org-global"
          filters:
            branches:
              only:
                - dev
                - prod
          requires:
            - sync-assets-to-s3
